/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.2.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Which of the steps to run
castellatedMesh true;
snap            false;
addLayers       false;

geometry
{
    K.stl
    {
        type  triSurfaceMesh;
        scale 1;
        name  kitchenT;
    }
    D.stl
    {
        type  triSurfaceMesh;
        scale 1;
        name  diningT;
    }
    L.stl
    {
        type  triSurfaceMesh;
        scale 1;
        name  livingT;
    }
    AC.stl
    {
        type  triSurfaceMesh;
        scale 1;
        name  AC;
    }
    sunD.stl
    {
        type  triSurfaceMesh;
        scale 1;
        name  sunD;
    }
    sunG.stl
    {
        type  triSurfaceMesh;
        scale 1;
        name  sunG;
    }

};


// Settings for the castellatedMesh generation.
castellatedMeshControls
{
    maxLocalCells 900000;

    maxGlobalCells 1000000;

    minRefinementCells 0;

    maxLoadUnbalance 0.10;

    nCellsBetweenLevels 1;

    features
    (
    );

    refinementSurfaces
    {
        kitchenT
        {
                level (0 0);
        }
        diningT
        {
                level (0 0);
        }
        livingT
        {
                level (0 0);
        }
        AC
        {
                level (0 0);
        }
        sunD
        {
                level (0 0);
        }
        sunG
        {
                level (0 0);
        }
    }

    resolveFeatureAngle 30;

    refinementRegions
    {
    }

     locationInMesh (0.1 0.1 0.1);

    allowFreeStandingZoneFaces true;
}

// Settings for the snapping.
snapControls
{
    nSmoothPatch 3;

    tolerance 2.0;

    nSolveIter 30;

    nRelaxIter 5;

/*
        nFeatureSnapIter 10;

        implicitFeatureSnap true;

        explicitFeatureSnap false;

        multiRegionFeatureSnap false;
*/
}

// Settings for the layer addition.
addLayersControls
{
    relativeSizes true;

    layers
    {
        "(lowerWall|motorBike).*"
        {
            nSurfaceLayers 1;
        }
    }

    expansionRatio 1.0;

    finalLayerThickness 0.3;

    minThickness 0.1;

    nGrow 0;

    featureAngle 60;

    slipFeatureAngle 30;

    nRelaxIter 3;

    nSmoothSurfaceNormals 1;

    nSmoothNormals 3;

    nSmoothThickness 10;

    maxFaceThicknessRatio 0.5;

    maxThicknessToMedialRatio 0.3;

    minMedianAxisAngle 90;

    nBufferCellsNoExtrude 0;

    nLayerIter 50;
}


// Generic mesh quality settings. At any undoable phase these determine
// where to undo.
meshQualityControls
{
    maxNonOrtho 65;

    maxBoundarySkewness 20;
    maxInternalSkewness 4;

    maxConcave 80;

    minVol 1e-13;

    minTetQuality 1e-30;

    minArea -1;

    minTwist 0.02;

    minDeterminant 0.001;

    minFaceWeight 0.02;

    minVolRatio 0.01;

    minTriangleTwist -1;

    nSmoothScale 4;

    errorReduction 0.75;
}


// Advanced

// Flags for optional output
// 0 : only write final meshes
// 1 : write intermediate meshes
// 2 : write volScalarField with cellLevel for postprocessing
// 4 : write current intersections as .obj files
debug 0;


// Merge tolerance. Is fraction of overall bounding box of initial mesh.
// Note: the write tolerance needs to be higher than this.
mergeTolerance 1e-5;


// ************************************************************************* //
